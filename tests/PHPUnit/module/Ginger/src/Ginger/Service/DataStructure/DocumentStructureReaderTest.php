<?php

namespace Ginger\Service\DataStructure;
/**
 * Test class for DocumentStructureReader.
 * Generated by PHPUnit on 2013-05-26 at 00:04:30.
 */
class DocumentStructureReaderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers Ginger\Model\Mapper\DocumentStructureReader::readStructureFromArray
     */
    public function testReadStructureFromArray()
    {
        $data = array(
            'first' => 'a string',
            'second' => array(
                array(
                    'deepFirst' => 1,
                    'deepSecond' => 2,
                ),
                array(
                    'deepFirst' => 5,
                    'deepThird' => true,
                    'deepFourth' => array(
                        'deeperFirst' => 0.123,
                        'deeperSecond' => 'another string'
                    )
                )
            ),
            'third' => false,
        );

        $structure = DocumentStructureReader::readStructureFromArray($data);

        $check = array(
            array(
                'name' => 'first',
                'type' => 'string',
            ),
            array(
                'name' => 'second',
                'type' => 'array',
            ),
            array(
                'name' => 'second::[]',
                'type' => 'object',
            ),
            array(
                'name' => 'second::[]::deepFirst',
                'type' => 'integer',
            ),
            array(
                'name' => 'second::[]::deepSecond',
                'type' => 'integer',
            ),
            array(
                'name' => 'second::[]::deepThird',
                'type' => 'boolean',
            ),
            array(
                'name' => 'second::[]::deepFourth',
                'type' => 'object',
            ),
            array(
                'name' => 'second::[]::deepFourth::deeperFirst',
                'type' => 'double',
            ),
            array(
                'name' => 'second::[]::deepFourth::deeperSecond',
                'type' => 'string',
            ),
            array(
                'name' => 'third',
                'type' => 'boolean',
            )
        );

        $this->assertEquals($check, $structure);
    }

    public function testReadStructureFromList()
    {
        $data = array(
            array(
                'first' => 'a string',
                'second' => 1,
                'third' => false
            ),
            array(
                'first' => 'another string',
                'second' => 2,
                'third' => true,
                'fourth' => array(
                    'deepFirst' => 'deep string'
                ),
            ),
            array(
                'second' => 3,
            )
        );

        $structure = DocumentStructureReader::readStructureFromArray($data);

        $check = array(
            array(
                'name' => '[]',
                'type' => 'object',
            ),
            array(
                'name' => '[]::first',
                'type' => 'string',
            ),
            array(
                'name' => '[]::second',
                'type' => 'integer',
            ),
            array(
                'name' => '[]::third',
                'type' => 'boolean',
            ),
            array(
                'name' => '[]::fourth',
                'type' => 'object',
            ),
            array(
                'name' => '[]::fourth::deepFirst',
                'type' => 'string',
            )
        );

        $this->assertEquals($check, $structure);
    }
}

?>
