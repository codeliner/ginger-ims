<?php
namespace Ginger\Model\Directory;

use Ginger\Model\File\File;
use Ginger\Model\Directory;
/**
 * Test class for TargetDirectory.
 * Generated by PHPUnit on 2013-06-04 at 21:48:55.
 */
class TargetDirectoryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var TargetDirectory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TargetDirectory(1, 'TargetDirectory', '#', 'Ginger.Application');
    }

    protected function tearDown()
    {
        Directory\Inbox::deleteFiles('/^test_.*/');
        Directory\Outbox::deleteFiles('/^test_.*/');
    }

    /**
     * @covers Ginger\Model\Directory\TargetDirectory::addItem
     */
    public function testAddItemFileWithPlaceholder()
    {
        $file = new File(Directory\Inbox::DIR, 'test.json');

        $file->writeData(array('name' => 'addItemTest'));

        $this->object->setOptions(array(
            'target_dir' => 'outbox',
            'filename_pattern' => 'test_[name].json',
        ));

        $this->object->addItem($file);

        $checkFile = new File(Directory\Outbox::DIR, 'test_addItemTest.json');

        $this->assertEquals(array('name' => 'addItemTest'), $checkFile->getData());
    }

    /**
     * @covers Ginger\Model\Directory\TargetDirectory::addItem
     */
    public function testAddItemWithDefaultPlaceholder()
    {
        //This time we check, that data isn't read from file, cause we have no data placeholder defined
        //in the filename_pattern, otherwise the test breaks, cause file contains invalid json format
        $this->object->setOptions(array(
            'target_dir' => 'outbox',
            'filename_pattern' => 'test_invalid_data_[$DATE].json',
        ));
        file_put_contents(Directory\Inbox::DIR . '/test_invalid_data.json', '}:invalid json');

        $file = new File(Directory\Inbox::DIR, 'test_invalid_data.json');

        $this->object->addItem($file);

        $this->assertEquals(Directory\Outbox::DIR, $file->getDir());
    }

    /**
     * @covers Ginger\Model\Directory\TargetDirectory::addItem
     */
    public function testAddItemData()
    {
        $this->object->setOptions(array(
            'target_dir' => 'inbox',
            'filename_pattern' => 'test_data_to_file.json',
        ));

        $this->object->addItem(array(
            'some' => 'data'
        ));

        $file = new File(Directory\Inbox::DIR, 'test_data_to_file.json');

        $this->assertEquals(array('some' => 'data'), $file->getData());
    }
}

?>
